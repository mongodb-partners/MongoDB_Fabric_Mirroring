{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "webAppName": {
            "defaultValue": "[format('webApp-{0}', uniqueString(resourceGroup().id))]",
            "minLength": 2,
            "type": "String",
            "metadata": {
                "description": "Web app name."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "sku": {
            "defaultValue": "F1",
            "type": "String",
            "metadata": {
                "description": "The SKU of App Service Plan."
            }
        },
        "linuxFxVersion": {
            "defaultValue": "PYTHON|3.12",
            "type": "String",
            "metadata": {
                "description": "The Runtime stack of current web app"
            }
        },
        "repoUrl": {
            "defaultValue": "https://github.com/mongodb-partners/MongoDB_Fabric_Mirroring.git",
            "type": "String",
            "metadata": {
                "description": "Optional Git Repo URL"
            }
        },
        "connectionString": {
            "type": "String",
            "metadata": {
                "description": "The MongoDB Connection URI"
            }
        }
    },
    "variables": {
        "appServicePlanPortalName": "[format('AppServicePlan-{0}', parameters('webAppName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('appServicePlanPortalName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[parameters('webAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "httpsOnly": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
                "siteConfig": {
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "minTlsVersion": "1.2",
                    "ftpsState": "FtpsOnly"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-02-01",
            "name": "[format('{0}/{1}', parameters('webAppName'), 'appsettings')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "properties": {
                "LOG_LEVEL": "INFO",
                "MONGO_CONN_STR": "[parameters('connectionString')]",
                "MONGO_DB_NAME": "",
                "MONGO_COLLECTION": "",
                "LZ_URL": "",
                "APP_ID": "",
                "SECRET": "",
                "TENANT_ID": "",
                "INIT_LOAD_BATCH_SIZE": "",
                "DELTA_SYNC_BATCH_SIZE": ""
            }
        },
        {
            "type": "Microsoft.Web/sites/sourcecontrols",
            "apiVersion": "2021-02-01",
            "name": "[format('{0}/{1}', parameters('webAppName'), 'web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "properties": {
                "repoUrl": "[parameters('repoUrl')]",
                "branch": "main",
                "isManualIntegration": true,
                "ScmType": "ExternalGit"
            },
            "condition": "[contains(parameters('repoUrl'), 'http')]"
        }
    ]
}
